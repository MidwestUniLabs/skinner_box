name: major-release

on:
  workflow_dispatch:

env:
  PACKAGE_NAME: "Skinnerbox-Source"
  OWNER: "JDykman"

jobs:
  update_version:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.version.outputs.new_version }}
      tag_name: ${{ steps.version.outputs.tag_name }}
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update Version
        id: version
        run: |
          # Read current version
          CURRENT_VERSION=$(cat version.txt)
          echo "Current version: $CURRENT_VERSION"
          
          # Split version
          IFS='.' read -r major minor patch <<< "$CURRENT_VERSION"
          
          # Increment major version, reset minor and patch
          major=$((major + 1))
          minor=0
          patch=0
          
          # Create new version
          NEW_VERSION="${major}.${minor}.${patch}"
          echo "New version: $NEW_VERSION"
          
          # Update version file
          echo "$NEW_VERSION" > version.txt
          
          # Set outputs
          echo "new_version=$NEW_VERSION" >> "$GITHUB_OUTPUT"
          echo "tag_name=v$NEW_VERSION" >> "$GITHUB_OUTPUT"
      
      - name: Commit version update
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add version.txt
          git commit -m "Bump version to ${{ steps.version.outputs.new_version }}"
          git push
          git tag ${{ steps.version.outputs.tag_name }}
          git push --tags

  setup_and_build:
    needs: update_version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ needs.update_version.outputs.tag_name }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies from requirements.txt
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build source and wheel distribution
        run: |
          python setup.py sdist bdist_wheel

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  pypi_publish:
    name: Upload release to PyPI
    needs: [setup_and_build, update_version]
    runs-on: ubuntu-latest
    environment:
      name: release
    permissions:
      id-token: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  github_release:
    name: Create GitHub Release
    needs: [setup_and_build, update_version]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ needs.update_version.outputs.tag_name }}

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Create GitHub Release
        id: create_release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release create ${{ needs.update_version.outputs.tag_name }} dist/* --title "Version ${{ needs.update_version.outputs.new_version }}" --generate-notes